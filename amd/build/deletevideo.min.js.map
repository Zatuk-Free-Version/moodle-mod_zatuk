{"version":3,"file":"deletevideo.min.js","sources":["../src/deletevideo.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This file is having the functionality for deletevideo and publish video.\n *\n * @since      Moodle 2.0\n * @copyright  2023 Moodle India\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {get_string as getString} from 'core/str';\nimport ModalFactory from 'core/modal_factory';\nimport Ajax from 'core/ajax';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nconst Selectors = {\n    actions: {\n        deletevideo: '[data-action=\"deletevideo\"]',\n        movetozatuk: '[data-action=\"movetozatuk\"]',\n    },\n};\nexport const init = () => {\n    document.addEventListener('click', function(e) {\n        e.stopImmediatePropagation();\n        let deletevideo = e.target.closest(Selectors.actions.deletevideo);\n        if (deletevideo) {\n            const id = deletevideo.getAttribute('data-id');\n            ModalFactory.create({\n                title: getString('deletevideo', 'mod_zatuk'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('deleteconfirm', 'mod_zatuk')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('delete', 'mod_zatuk'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.id = id;\n                    var promise = Ajax.call([{\n                        methodname: 'mod_zatuk_delete_video',\n                        args: params\n                    }]);\n                    promise[0].done(function() {\n                        window.location.reload(true);\n                    }).fail(function() {\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n        let movetozatuk = e.target.closest(Selectors.actions. movetozatuk);\n        if (movetozatuk) {\n            const id = movetozatuk.getAttribute('data-id');\n            ModalFactory.create({\n                title: getString('movetozatuk', 'mod_zatuk'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('movetozatukconfirm', 'mod_zatuk')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('movetozatuk', 'mod_zatuk'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                     Templates.renderForPromise('mod_zatuk/loader', {}).then(({html, js}) => {\n                        Templates.appendNodeContents('.modal-content', html, js);\n                    });\n                    var params = {};\n                    params.id = id;\n                    var promise = Ajax.call([{\n                        methodname: 'mod_zatuk_move_to_zatuk',\n                        args: params\n                    }]);\n                    promise[0].done(function() {\n                        window.location.reload(true);\n                    }).fail(function() {\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n\n    });\n};\n"],"names":["Selectors","deletevideo","movetozatuk","document","addEventListener","e","stopImmediatePropagation","target","closest","id","getAttribute","create","title","type","ModalFactory","types","SAVE_CANCEL","body","done","modal","setSaveButtonText","getRoot","on","ModalEvents","save","preventDefault","params","Ajax","call","methodname","args","window","location","reload","fail","bind","this","show","renderForPromise","then","_ref","html","js","appendNodeContents"],"mappings":";;;;;;;oRA2BMA,kBACO,CACLC,YAAa,8BACbC,YAAa,6CAGD,KAChBC,SAASC,iBAAiB,SAAS,SAASC,GACxCA,EAAEC,+BACEL,YAAcI,EAAEE,OAAOC,QAAQR,kBAAkBC,gBACjDA,YAAa,OACPQ,GAAKR,YAAYS,aAAa,kCACvBC,OAAO,CAChBC,OAAO,mBAAU,cAAe,aAChCC,KAAMC,uBAAaC,MAAMC,YACzBC,MAAM,mBAAU,gBAAiB,eAClCC,KAAK,SAASC,YACRA,MAAQA,MACbA,MAAMC,mBAAkB,mBAAU,SAAU,cAC5CD,MAAME,UAAUC,GAAGC,sBAAYC,KAAM,SAASnB,GAC1CA,EAAEoB,qBACEC,OAAS,GACbA,OAAOjB,GAAKA,GACEkB,cAAKC,KAAK,CAAC,CACrBC,WAAY,yBACZC,KAAMJ,UAEF,GAAGR,MAAK,WACZa,OAAOC,SAASC,QAAO,MACxBC,MAAK,gBAEVC,KAAKC,OACPjB,MAAMkB,QACRF,KAAKC,WAEPlC,YAAcG,EAAEE,OAAOC,QAAQR,kBAAmBE,gBAClDA,YAAa,OACPO,GAAKP,YAAYQ,aAAa,kCACvBC,OAAO,CAChBC,OAAO,mBAAU,cAAe,aAChCC,KAAMC,uBAAaC,MAAMC,YACzBC,MAAM,mBAAU,qBAAsB,eACvCC,KAAK,SAASC,YACRA,MAAQA,MACbA,MAAMC,mBAAkB,mBAAU,cAAe,cACjDD,MAAME,UAAUC,GAAGC,sBAAYC,KAAM,SAASnB,GAC1CA,EAAEoB,oCACSa,iBAAiB,mBAAoB,IAAIC,MAAKC,WAACC,KAACA,KAADC,GAAOA,4BACnDC,mBAAmB,iBAAkBF,KAAMC,WAErDhB,OAAS,GACbA,OAAOjB,GAAKA,GACEkB,cAAKC,KAAK,CAAC,CACrBC,WAAY,0BACZC,KAAMJ,UAEF,GAAGR,MAAK,WACZa,OAAOC,SAASC,QAAO,MACxBC,MAAK,gBAEVC,KAAKC,OACPjB,MAAMkB,QACRF,KAAKC"}